by = .(date, year, month, day)] %>%
.[, date2 := as.Date(date)] %>%
# melt.data.table(id.vars = c("date", "year", "month", "day"),
#                 measure.vars = c("min","avg","max"),
#                 variable.name = "metric",
#                 value.name = "value"
#                 ) %>%
ggplot() + geom_line(aes(x = date2, y = min, color = "min", linetype = "dot") ) +
geom_line(aes(x = date2, y = avg,  alpha = 0.4, size = 0.4)) +
geom_line(aes(x = date2, y = max, color="max",  linetype = "dot")) + geom_hline(yintercept = -3)
pdsiFile[COUNTYFP == 53L] %>% .[, .(
min = min(min, na.rm = T),
avg = mean(mean, na.rm = T),
max = max(max, na.rm = T)
),
by = .(date, year, month, day)] %>%
.[, date2 := as.Date(date)] %>%
# melt.data.table(id.vars = c("date", "year", "month", "day"),
#                 measure.vars = c("min","avg","max"),
#                 variable.name = "metric",
#                 value.name = "value"
#                 ) %>%
ggplot() + geom_line(aes(x = date2, y = min, color = "min", linetype = "dot") ) +
geom_line(aes(x = date2, y = avg,  alpha = 0.4, size = 0.4)) +
geom_line(aes(x = date2, y = max, color="max",  linetype = "dot")) + geom_hline(yintercept = -3)
# dates <- seq(as.Date(beginning):as.Date(end), by = "day")
library(dygraphs)
# dates <- seq(as.Date(beginning):as.Date(end), by = "day")
library(dygraphs)
library(xts)
foo <-
pdsiFile[COUNTYFP == 53L] %>% .[, .(
min = min(min, na.rm = T),
avg = mean(mean, na.rm = T),
max = max(max, na.rm = T)
),
by = .(date, year, month, day)] %>%
.[, date2 := as.POSIXct(as.Date(date))]
foo
foo
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dySeries("min", drawPoints = F, color = "red") %>%
dySeries("avg", drawPoints = F, color = "gray") %>%
dySeries("max", drawPoints = F, color = "blue") %>%
dyOptions(fillGraph = TRUE, fillAlpha = 0.4) %>% dyRangeSelector(dateWindow = c("2018-06-01", "2018-09-30"), height = 20)
foo <-
pdsiFile[COUNTYFP == 53L] %>% .[, .(
min = min(min, na.rm = T),
avg = mean(mean, na.rm = T),
max = max(max, na.rm = T)
),
by = .(date, year, month, day)] %>%
.[, date2 := as.POSIXct(as.Date(date))] %>%
.[, .(date2, min, avg, max)]
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dySeries("min", drawPoints = F, color = "red") %>%
dySeries("avg", drawPoints = F, color = "gray") %>%
dySeries("max", drawPoints = F, color = "blue") %>%
dyOptions(fillGraph = TRUE, fillAlpha = 0.4) %>% dyRangeSelector(dateWindow = c("2018-06-01", "2018-09-30"), height = 20)
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dySeries("min", drawPoints = F, color = "red") %>%
dySeries("avg", drawPoints = F, color = "gray") %>%
dySeries("max", drawPoints = F, color = "blue") %>%
dyOptions(fillGraph = FALSE, fillAlpha = 0.4) %>% dyRangeSelector(dateWindow = c("2018-06-01", "2018-09-30"), height = 20)
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dySeries("min", drawPoints = F, color = "red") %>%
dySeries("avg", drawPoints = F, color = "gray") %>%
dySeries("max", drawPoints = F, color = "blue") %>%
dyOptions(fillGraph = FALSE, fillAlpha = 0.4) %>% dyRangeSelector(dateWindow = c("2018-06-01", "2018-09-30"), height = 50)
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dySeries("min", drawPoints = F, color = "red") %>%
dySeries("avg", drawPoints = F, color = "gray") %>%
dySeries("max", drawPoints = F, color = "blue") %>%
dyOptions(fillGraph = FALSE, fillAlpha = 0.4) %>% dyRangeSelector(dateWindow = c("2010-01-01", "2018-09-30"), height = 50)
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dySeries("min", drawPoints = F, color = "red") %>%
dySeries("avg", drawPoints = F, color = "gray") %>%
dySeries("max", drawPoints = F, color = "blue") %>%
dyOptions(fillGraph = FALSE) %>%
dyRangeSelector(dateWindow = c("2010-01-01", "2018-09-30"), height = 50)
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dyAxis("y", label = "Palmer Drought Severity Axis", valueRange = c(-5, 10)) %>%
dySeries("min", drawPoints = F, color = "red") %>%
dySeries("avg", drawPoints = F, color = "gray") %>%
dySeries("max", drawPoints = F, color = "blue") %>%
dyOptions(fillGraph = FALSE) %>%
dyRangeSelector(dateWindow = c("2010-01-01", "2018-09-30"), height = 50)
pdsiFile[COUNTYFP == 53L] %>% .[, .(
min = min(min, na.rm = T),
avg = mean(mean, na.rm = T),
max = max(max, na.rm = T)
),
by = .(date, year, month, day)] %>%
.[, date2 := as.Date(date)] %>%
# melt.data.table(id.vars = c("date", "year", "month", "day"),
#                 measure.vars = c("min","avg","max"),
#                 variable.name = "metric",
#                 value.name = "value"
#                 ) %>%
ggplot() + geom_line(aes(x = date2, y = min, color = "min", linetype = "dot") ) +
geom_line(aes(x = date2, y = avg,  alpha = 0.4, size = 0.4)) +
geom_line(aes(x = date2, y = max, color="max",  linetype = "dot")) + geom_hline(yintercept = -3)
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dyAxis("y", label = "Palmer Drought Severity Axis", valueRange = c(-10, 10)) %>%
dySeries("min", drawPoints = F, color = "red") %>%
dySeries("avg", drawPoints = F, color = "gray") %>%
dySeries("max", drawPoints = F, color = "blue") %>%
dyOptions(fillGraph = FALSE) %>%
dyRangeSelector(dateWindow = c("2010-01-01", "2018-09-30"), height = 50)
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dyAxis("y", label = "Palmer Drought Severity Axis", valueRange = c(-10, 10)) %>%
dySeries("min", drawPoints = F, color = "red") %>%
dySeries("avg", drawPoints = F, color = "gray") %>%
dySeries("max", drawPoints = F, color = "blue") %>%
dyOptions(fillGraph = FALSE) %>%
dyRangeSelector(dateWindow = c("2010-01-01", "2018-09-30"), height = 50)
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dyAxis("y", label = "Palmer Drought Severity Index", valueRange = c(-10, 10)) %>%
dySeries("min", drawPoints = F, color = "red") %>%
dySeries("avg", drawPoints = F, color = "gray") %>%
dySeries("max", drawPoints = F, color = "blue") %>%
dyOptions(fillGraph = FALSE) %>%
dyRangeSelector(dateWindow = c("2010-01-01", "2018-09-30"), height = 50)
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dyAxis("y", label = "Palmer Drought Severity Index", valueRange = c(-10, 10)) %>%
dySeries("min", drawPoints = F, color = "red") %>%
dySeries("avg", drawPoints = F, color = "gray") %>%
dySeries("max", drawPoints = F, color = "blue") %>%
dyOptions(fillGraph = FALSE) %>%
dyRangeSelector(dateWindow = c("2010-01-01", "2018-09-30"), height = 10)
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dyAxis("y", label = "Palmer Drought Severity Index", valueRange = c(-10, 10)) %>%
dySeries("min", drawPoints = F, color = "red") %>%
dySeries("avg", drawPoints = F, color = "gray") %>%
dySeries("max", drawPoints = F, color = "blue") %>%
dyOptions(fillGraph = FALSE) %>%
dyRangeSelector(dateWindow = c("2010-01-01", "2018-09-30"), height = 100)
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dyAxis("y", label = "Palmer Drought Severity Index", valueRange = c(-10, 10)) %>%
dySeries("min", drawPoints = F, color = "red") %>%
dySeries("avg", drawPoints = F, color = "gray") %>%
dySeries("max", drawPoints = F, color = "blue") %>%
dyOptions(fillGraph = FALSE) %>%
dyRangeSelector(dygraph = "avg",dateWindow = c("2010-01-01", "2018-09-30"), height = 100)
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dyAxis("y", label = "Palmer Drought Severity Index", valueRange = c(-10, 10)) %>%
dySeries("min", drawPoints = F, color = "red") %>%
dySeries("avg", drawPoints = F, color = "gray") %>%
dySeries("max", drawPoints = F, color = "blue") %>%
dyOptions(fillGraph = FALSE) %>%
dyRangeSelector(dygraph = "avg", dateWindow = c("2010-01-01", "2018-09-30"), height = 100)
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dyAxis("y", label = "Palmer Drought Severity Index", valueRange = c(-10, 10)) %>%
dySeries("min", drawPoints = F, color = "red") %>%
dySeries("avg", drawPoints = F, color = "gray") %>%
dySeries("max", drawPoints = F, color = "blue") %>%
dyOptions(fillGraph = FALSE) %>%
dyRangeSelector(dygraph = avg, dateWindow = c("2010-01-01", "2018-09-30"), height = 100)
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dyAxis("y", label = "Palmer Drought Severity Index", valueRange = c(-10, 10)) %>%
dySeries("min", drawPoints = F, color = "red") %>%
dySeries("avg", drawPoints = F, color = "gray") %>%
dySeries("max", drawPoints = F, color = "blue") %>%
dyOptions(fillGraph = FALSE) %>%
dyRangeSelector(dygraph = "avg", dateWindow = c("2010-01-01", "2018-09-30"), height = 100)
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dyAxis("y", label = "Palmer Drought Severity Index", valueRange = c(-10, 10)) %>%
dySeries("min", drawPoints = F, color = "red") %>%
dySeries("avg", drawPoints = F, color = "gray") %>%
dySeries("max", drawPoints = F, color = "blue") %>%
dyOptions(fillGraph = FALSE) %>%
dyRangeSelector(fillColor = "red" dateWindow = c("2010-01-01", "2018-09-30"), height = 100)
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dyAxis("y", label = "Palmer Drought Severity Index", valueRange = c(-10, 10)) %>%
dySeries("min", drawPoints = F, color = "red") %>%
dySeries("avg", drawPoints = F, color = "gray") %>%
dySeries("max", drawPoints = F, color = "blue") %>%
dyOptions(fillGraph = FALSE) %>%
dyRangeSelector(fillColor = "red", dateWindow = c("2010-01-01", "2018-09-30"), height = 100)
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dyAxis("y", label = "Palmer Drought Severity Index", valueRange = c(-10, 10)) %>%
dySeries(c("min", "avg","max"), drawPoints = F, color = "red") %>%
dyOptions(fillGraph = FALSE) %>%
dyRangeSelector(fillColor = "red", dateWindow = c("2010-01-01", "2018-09-30"), height = 100)
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dyAxis("y", label = "Palmer Drought Severity Index", valueRange = c(-10, 10)) %>%
dySeries(c("min", "avg","max"), drawPoints = F, color = "red") %>%
dyOptions(fillGraph = FALSE) %>%
dyRangeSelector(fillColor = "", dateWindow = c("2010-01-01", "2018-09-30"), height = 100)
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dyAxis("y", label = "Palmer Drought Severity Index", valueRange = c(-10, 10)) %>%
dySeries("min", drawPoints = F, color = "red") %>%
dySeries("avg", drawPoints = F, color = "gray") %>%
dySeries("max", drawPoints = F, color = "blue") %>%
dyOptions(fillGraph = FALSE) %>%
dyLimit(-3, color = "red")
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dyAxis("y", label = "Palmer Drought Severity Index", valueRange = c(-10, 10)) %>%
dySeries("min", drawPoints = F, color = "red") %>%
dySeries("avg", drawPoints = F, color = "gray") %>%
dySeries("max", drawPoints = F, color = "blue") %>%
dyOptions(fillGraph = FALSE) %>%
dyLimit(-3, color = "red") %>%
dyRangeSelector(fillColor = "red",  dateWindow = c("2010-01-01", "2018-09-30"), height = 100)
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dyAxis("y", label = "Palmer Drought Severity Index", valueRange = c(-10, 10)) %>%
dySeries("min", drawPoints = F, color = "red", label = "Minimum") %>%
dySeries("avg", drawPoints = F, color = "gray", label = "Average") %>%
dySeries("max", drawPoints = F, color = "blue", label = "Maximum") %>%
dyOptions(fillGraph = FALSE) %>%
dyLimit(-3, color = "red") %>%
dyRangeSelector(fillColor = "red",  dateWindow = c("2010-01-01", "2018-09-30"), height = 100)
shiny::runApp('R:/ClimateExposures')
foo <-
pdsiFile %>% .[, .(
min = min(min, na.rm = T),
avg = mean(mean, na.rm = T),
max = max(max, na.rm = T)
),
by = .(date, year, month, day)] %>%
.[, date2 := as.POSIXct(as.Date(date))] %>%
.[, .(date2, min, avg, max)] %>% fwrite("R:/ClimateExposures/CAdroughtFileCounties.csv")
foo <-
pdsiFile %>% .[, .(
min = min(min, na.rm = T),
avg = mean(mean, na.rm = T),
max = max(max, na.rm = T)
),
by = .(date, year, month, day, STATEFP, COUNTYFP)] %>%
.[, date2 := as.POSIXct(as.Date(date))] %>% fwrite("R:/ClimateExposures/CAdroughtFileCounties.csv")
foo <-
pdsiFile %>% .[, .(
min = min(min, na.rm = T),
avg = mean(mean, na.rm = T),
max = max(max, na.rm = T)
),
by = .(date, year, month, day, STATEFP, COUNTYFP)] %>%
.[, date2 := as.POSIXct(as.Date(date))]
foo[, .(date2, min, avg, max)]
foo <- foo[, .(date2, min, avg, max)]
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dyAxis("y", label = "Palmer Drought Severity Index", valueRange = c(-10, 10)) %>%
dySeries("min", drawPoints = F, color = "red", label = "Minimum") %>%
dySeries("avg", drawPoints = F, color = "gray", label = "Average") %>%
dySeries("max", drawPoints = F, color = "blue", label = "Maximum") %>%
dyOptions(fillGraph = FALSE) %>%
dyLimit(-3, color = "red") %>%
dyRangeSelector(fillColor = "red",  dateWindow = c("2010-01-01", "2018-09-30"), height = 100)
foo <- foo[COUNTYFP == 15, .(date2, min, avg, max)]
foo <-
pdsiFile %>% .[, .(
min = min(min, na.rm = T),
avg = mean(mean, na.rm = T),
max = max(max, na.rm = T)
),
by = .(date, year, month, day, STATEFP, COUNTYFP)] %>%
.[, date2 := as.POSIXct(as.Date(date))] #%>% fwrite("R:/ClimateExposures/CAdroughtFileCounties.csv")
foo <- foo[COUNTYFP == 15, .(date2, min, avg, max)]
dygraph(xts(foo, order.by = foo$date2), main = "Drought")  %>%
dyAxis("y", label = "Palmer Drought Severity Index", valueRange = c(-10, 10)) %>%
dySeries("min", drawPoints = F, color = "red", label = "Minimum") %>%
dySeries("avg", drawPoints = F, color = "gray", label = "Average") %>%
dySeries("max", drawPoints = F, color = "blue", label = "Maximum") %>%
dyOptions(fillGraph = FALSE) %>%
dyLimit(-3, color = "red") %>%
dyRangeSelector(fillColor = "red",  dateWindow = c("2010-01-01", "2018-09-30"), height = 100)
foo <-
pdsiFile %>% .[, .(
min = min(min, na.rm = T),
avg = mean(mean, na.rm = T),
max = max(max, na.rm = T)
),
by = .(date, year, month, day, STATEFP, COUNTYFP)] %>%  fwrite("R:/ClimateExposures/CAdroughtFileCounties.csv")
bar <- fread("R:/ClimateExposures/CAdroughtFileCounties.csv")
bar[, .(
min = min(min, na.rm = T),
avg = mean(mean, na.rm = T),
max = max(max, na.rm = T)
),
by = .(date, year, month, day)]
bar
bar[, .(
min = min(min, na.rm = T),
avg = mean(avg, na.rm = T),
max = max(max, na.rm = T)
),
by = .(date, year, month, day)]
drought[, .(
min = min(min, na.rm = T),
avg = mean(avg, na.rm = T),
max = max(max, na.rm = T)
),
by = .(date, year, month, day)] %>%
.[, date2 := as.POSIXct(as.Date(date))] %>%
.[, .(date2, min, avg, max)]
COUNTYFP
bar
bar <- fread("R:/ClimateExposures/CAsmokeFile.csv")
bar
bar[date > 20160000]
bar[date > 20160000] %>% fwrite("R:/ClimateExposures/CAsmokeFile1618.csv")
# when combining several
rm(list = ls())
library(data.table)
library(tidyverse)
library(scales)
library(lubridate)
library(sf)
pdsiFile <-   fread("~/data/PDSItracts.csv")
setkey(pdsiFile, date, STATEFP, COUNTYFP)
pdsiFile <- copy(pdsiFile)
pdsiFile
pdsiFileyear == 2018]
pdsiFile[year == 2018]
library(jsonlite)
variable <- "B00001_001E" # this is a placeholde for the ACS varibale we'll read in, t in this case population over 65
# first read in the data from the ACS and store as a data frome
#examining the data will show that the first row is the names of the data
people <-
as.data.frame(fromJSON(
paste0("https://api.census.gov/data/2016/acs/acs5?get=NAME,",variable,"&for=tract:*&in=state:",stateFIPs,"%20county:*"
), flatten = T
))
# first read in the data from the ACS and store as a data frome
#examining the data will show that the first row is the names of the data
people <-
as.data.frame(fromJSON(
paste0("https://api.census.gov/data/2016/acs/acs5?get=NAME,",variable,"&for=tract:*&in=state:06%20county:*"
), flatten = T
))
people
# here we can elimiate the uneccessary first row and column AND...
# change the name and type of the variables to match our table of smoke exposures
people <- people[-1,-1] %>% mutate(estimate = as.integer(as.character(V2)),
STATEFP = as.integer(as.character(V3)),
COUNTYFP = as.integer(as.character(V4)),
TRACTCE = as.integer(as.character(V5))) %>%
select(STATEFP, COUNTYFP, TRACTCE, estimate)
people
# here we can elimiate the uneccessary first row and column AND...
# change the name and type of the variables to match our table of smoke exposures
people <- as.data.table({people[-1,-1] %>% mutate(estimate = as.integer(as.character(V2)),
STATEFP = as.integer(as.character(V3)),
COUNTYFP = as.integer(as.character(V4)),
TRACTCE = as.integer(as.character(V5))) %>%
select(STATEFP, COUNTYFP, TRACTCE, estimate)
})
# first read in the data from the ACS and store as a data frome
#examining the data will show that the first row is the names of the data
people <-
as.data.frame(fromJSON(
paste0("https://api.census.gov/data/2016/acs/acs5?get=NAME,",variable,"&for=tract:*&in=state:06%20county:*"
), flatten = T
))
# here we can elimiate the uneccessary first row and column AND...
# change the name and type of the variables to match our table of smoke exposures
people <- as.data.table({people[-1,-1] %>% mutate(estimate = as.integer(as.character(V2)),
STATEFP = as.integer(as.character(V3)),
COUNTYFP = as.integer(as.character(V4)),
TRACTCE = as.integer(as.character(V5))) %>%
select(STATEFP, COUNTYFP, TRACTCE, estimate)
})
people
merge(pdsiFile[year == 2018], people)
pdsiFile
pdsiFile[, TRACTCE := as.integer(str_sub(geoid10, 5, 10))]
pdsiFile[year == 2018] %>% .[, TRACTCE := as.integer(str_sub(geoid10, 5, 10))]
merge({pdsiFile[year == 2018] %>% .[, TRACTCE := as.integer(str_sub(geoid10, 5, 10))] }, people)
merge({pdsiFile[year == 2018] %>% .[, TRACTCE := as.integer(str_sub(geoid10, 5, 10))] }, people, by = c("STATEFP","COUNTYFP","TRACTCE"))
merge({pdsiFile[year == 2018] %>% .[, TRACTCE := as.integer(str_sub(geoid10, 5, 10))] }, people, by = c("STATEFP","COUNTYFP","TRACTCE"))
merge({pdsiFile[year == 2018] %>% .[, TRACTCE := as.integer(str_sub(geoid10, 5, 10))] }, people, by = c("STATEFP","COUNTYFP","TRACTCE")) %>%
.[mean <=-3 ,.N, by = .(STATEFP)]
droughtPOP2018 <- merge({pdsiFile[year == 2018] %>% .[, TRACTCE := as.integer(str_sub(geoid10, 5, 10))] }, people, by = c("STATEFP","COUNTYFP","TRACTCE"))
droughtPOP2018 <- merge({pdsiFile[year == 2018] %>% .[, TRACTCE := as.integer(str_sub(geoid10, 5, 10))] }, people, by = c("STATEFP","COUNTYFP","TRACTCE"))
droughtPOP2018[mean <=-3 ,.N, by = .(STATEFP)]
droughtPOP2018[mean <=-3 ,yn = 1, by = .(date)]
droughtPOP2018[mean <=-3 ,.(yn = 1), by = .(date)]
nrow(droughtPOP2018[mean <=-3 ,.(yn = 1), by = .(date)])
nrow(droughtPOP2018[mean <=-3 ,.(yn = 1), by = .(date)])*9
droughtPOP2018[mean <=-3 ,.(PDs = sum(estimate *9) ), by = .(STATEFP)]
droughtPOP2018[mean <=-3 ,.(PDs = sum(estimate *9, na.rm = T) ), by = .(STATEFP)]
droughtPOP2018[mean <=-3 ,.(PDs = sum(estimate *9, na.rm = T)/1000000 ), by = .(STATEFP)]
droughtPOP2018 <- merge({pdsiFile[year <2010] %>% .[, TRACTCE := as.integer(str_sub(geoid10, 5, 10))] }, people, by = c("STATEFP","COUNTYFP","TRACTCE"))
droughtPOP2018 <- merge({pdsiFile[year > 2010] %>% .[, TRACTCE := as.integer(str_sub(geoid10, 5, 10))] }, people, by = c("STATEFP","COUNTYFP","TRACTCE"))
droughtPOP2018[mean <=-3 ,.(PDs = sum(estimate *9, na.rm = T)/1000000 ), by = .(year)]
library(jsonlite)
droughtPOP2018[min <=-3 ,.(PDs = sum(estimate *9, na.rm = T)/1000000 ), by = .(year)]
droughtPOP2018[max <=-3 ,.(PDs = sum(estimate *9, na.rm = T)/1000000 ), by = .(year)]
droughtPOP2018[max <=-3 ,.(PDs = sum(estimate *9, na.rm = T)/1000000 ), by = .(year)] %>% ggplot() + geom_bar(aes(x = year, y= PDs), stat="identity")
droughtPOP2018[mean <=-3 ,.(PDs = sum(estimate *9, na.rm = T)/1000000 ), by = .(year)] %>% ggplot() + geom_bar(aes(x = year, y= PDs), stat="identity")
droughtPOP2018[min <=-3 ,.(PDs = sum(estimate *9, na.rm = T)/1000000 ), by = .(year)] %>% ggplot() + geom_bar(aes(x = year, y= PDs), stat="identity")
droughtPOP2018 <- merge({pdsiFile[year == 2011] %>% .[, TRACTCE := as.integer(str_sub(geoid10, 5, 10))] }, people, by = c("STATEFP","COUNTYFP","TRACTCE"))
nrow(droughtPOP2018[mean <=-3 ,.(yn = 1), by = .(date)])*9
droughtPOP2018[min <=-3 ,.(PDs = sum(estimate *9, na.rm = T)/1000000 ), by = .(year)] %>% ggplot() + geom_bar(aes(x = year, y= PDs), stat="identity")
pdsiFile
droughtPOP2018 <- merge({pdsiFile[year > 2010] %>% .[, TRACTCE := as.integer(str_sub(geoid10, 5, 10))] }, people, by = c("STATEFP","COUNTYFP","TRACTCE"))
droughtPOP2018[min <=-3 ,.(PDs = sum(estimate *9, na.rm = T)/1000000 ), by = .(year)] %>% ggplot() + geom_bar(aes(x = year, y= PDs), stat="identity")
droughtPOP2018[min <=-3 ,.(PDs = sum(estimate *9, na.rm = T)/1000000 ), by = .(year)] %>% ggplot() + geom_bar(aes(x = year, y= PDs), stat="identity")
droughtPOP2018[max <=-3 ,.(PDs = sum(estimate *9, na.rm = T)/1000000 ), by = .(year)] %>% ggplot() + geom_bar(aes(x = year, y= PDs), stat="identity")
droughtPOP2018[mean <=-3 ,.(PDs = sum(estimate *9, na.rm = T)/1000000 ), by = .(year)] %>% ggplot() + geom_bar(aes(x = year, y= PDs), stat="identity")
droughtPOP2018[mean <=-3 ,.(PDs = sum(estimate *9, na.rm = T)/1000000 ), by = .(year)] %>% ggplot() + geom_bar(aes(x = year, y= PDs), stat="identity")
droughtPOP2018[mean <=-3 ,.(PDs = sum(estimate *9, na.rm = T)/1000000 ), by = .(year)]
library(data.table
)
library(data.table)
fread("T:\SiteAssessmentSection\South Gate Air Data\SCSG data\SCSG_01 (33.93679500346296 -118.18616057071745) Primary 04_09_2018 02_04_2019.csv")
fread("T:/SiteAssessmentSection/South Gate Air Data/SCSG data/SCSG_01 (33.93679500346296 -118.18616057071745) Primary 04_09_2018 02_04_2019.csv")
fread("T:/SiteAssessmentSection/South Gate Air Data/SCSG data/SCSG_01 (33.93679500346296 -118.18616057071745) Primary 04_09_2018 02_04_2019.csv", fill = FLSE)
fread("T:/SiteAssessmentSection/South Gate Air Data/SCSG data/SCSG_01 (33.93679500346296 -118.18616057071745) Primary 04_09_2018 02_04_2019.csv", fill = FALSE)
foo <- fread("T:/SiteAssessmentSection/South Gate Air Data/SCSG data/SCSG_01 (33.93679500346296 -118.18616057071745) Primary 04_09_2018 02_04_2019.csv")
library (xts)
library(xts)
library(dygraphs)
class(foo$created_at)
copy(foo)
foo[, time := as.ITime(created_at) ]
foo
foo <- fread("T:/SiteAssessmentSection/South Gate Air Data/SCSG data/SCSG_01 (33.93679500346296 -118.18616057071745) Primary 04_09_2018 02_04_2019.csv")
foo <- copy(foo)
foo[, time := as.Date(created_at) ]
foo
foo[, time := xts(created_at) ]
dygraph(xts(foo, order.by = foo$time), main = "Drought")
raph(xts(foo, order.by = foo$time), main = "Drought")  %>%
dySeries("PM1.0_CF_ATM_ug/m3", drawPoints = F, color = "red", label = "ultrafine") %>%
dySeries("PM2.5_CF_ATM_ug/m3", drawPoints = F, color = "gray", label = "fine") %>%
dySeries("PM10.0_CF_ATM_ug/m3", drawPoints = F, color = "blue", label = "coarse")
dygraph(xts(foo, order.by = foo$time), main = "Drought")  %>%
dySeries("PM1.0_CF_ATM_ug/m3", drawPoints = F, color = "red", label = "ultrafine") %>%
dySeries("PM2.5_CF_ATM_ug/m3", drawPoints = F, color = "gray", label = "fine") %>%
dySeries("PM10.0_CF_ATM_ug/m3", drawPoints = F, color = "blue", label = "coarse")
names(foo)
dygraph(xts(foo[,.(time, PM1.0_CF_ATM_ug/m3  PM2.5_CF_ATM_ug/m3 ,PM10.0_CF_ATM_ug/m3 )], order.by = foo$time), main = "Drought")  %>%
dySeries("PM1.0_CF_ATM_ug/m3", drawPoints = F, color = "red", label = "ultrafine") %>%
dySeries("PM2.5_CF_ATM_ug/m3", drawPoints = F, color = "gray", label = "fine") %>%
dySeries("PM10.0_CF_ATM_ug/m3", drawPoints = F, color = "blue", label = "coarse")
foo <- foo[,.(time, PM1.0_CF_ATM_ug/m3  PM2.5_CF_ATM_ug/m3 ,PM10.0_CF_ATM_ug/m3)]
dygraph(xts(foo, order.by = foo$time), main = "Drought")  %>%
dySeries("PM1.0_CF_ATM_ug/m3", drawPoints = F, color = "red", label = "ultrafine") %>%
dySeries("PM2.5_CF_ATM_ug/m3", drawPoints = F, color = "gray", label = "fine") %>%
dySeries("PM10.0_CF_ATM_ug/m3", drawPoints = F, color = "blue", label = "coarse")
foo <- foo[,.(time, PM1.0_CF_ATM_ug/m3  PM2.5_CF_ATM_ug/m3 ,PM10.0_CF_ATM_ug/m3)]
foo <- foo[,.(time, PM1.0_CF_ATM_ug/m3,  PM2.5_CF_ATM_ug/m3 ,PM10.0_CF_ATM_ug/m3)]
foo <- foo[,.(time, `PM1.0_CF_ATM_ug/m3`,  `PM2.5_CF_ATM_ug/m3` , `PM10.0_CF_ATM_ug/m3`)]
dygraph(xts(foo, order.by = foo$time), main = "Drought")  %>%
dySeries("PM1.0_CF_ATM_ug/m3", drawPoints = F, color = "red", label = "ultrafine") %>%
dySeries("PM2.5_CF_ATM_ug/m3", drawPoints = F, color = "gray", label = "fine") %>%
dySeries("PM10.0_CF_ATM_ug/m3", drawPoints = F, color = "blue", label = "coarse")
dygraph(xts(foo, order.by = foo$time), main = "Drought")  %>%
dySeries("PM1.0_CF_ATM_ug/m3", fillGraph = T,drawPoints = F, color = "red", label = "ultrafine") %>%
dySeries("PM2.5_CF_ATM_ug/m3", drawPoints = F, color = "gray", label = "fine") %>%
dySeries("PM10.0_CF_ATM_ug/m3", drawPoints = F, color = "blue", label = "coarse")
dygraph(xts(foo, order.by = foo$time), main = "Drought")  %>%
dySeries("PM1.0_CF_ATM_ug/m3", fillGraph = T,drawPoints = F, color = "red", label = "ultrafine") %>%
dySeries("PM2.5_CF_ATM_ug/m3", drawPoints = F, color = "gray", label = "fine") %>%
dySeries("PM10.0_CF_ATM_ug/m3", drawPoints = F, color = "blue", label = "coarse") %>%
dyRangeSelector(fillColor = "red",  dateWindow = c("2010-01-01", "2018-09-30"), height = 100)
dygraph(xts(foo, order.by = foo$time), main = "Drought")  %>%
dySeries("PM1.0_CF_ATM_ug/m3", fillGraph = T,drawPoints = F, color = "red", label = "ultrafine") %>%
dySeries("PM2.5_CF_ATM_ug/m3", drawPoints = F, color = "gray", label = "fine") %>%
dySeries("PM10.0_CF_ATM_ug/m3", drawPoints = F, color = "blue", label = "coarse") %>%
dyRangeSelector(fillColor = "red",  dateWindow = c("2018-07-01", "2018-07-31"), height = 100)
foo <- fread("T:/SiteAssessmentSection/South Gate Air Data/SCSG data/SCSG_01 (33.93679500346296 -118.18616057071745) Primary 04_09_2018 02_04_2019.csv")
foo <- copy(foo)
foo[, `:=` .(date = as.Date(created_at),
time = as.ITime(created_at))]
foo[, `:=` (date = as.Date(created_at),
time = as.ITime(created_at))]
foo
foo[,dateTime := as.POSIXct(created_at)]
foo
foo <- foo[,.(dateTime, `PM1.0_CF_ATM_ug/m3`,  `PM2.5_CF_ATM_ug/m3` , `PM10.0_CF_ATM_ug/m3`)]
dygraph(xts(foo, order.by = foo$time), main = "Drought")  %>%
dySeries("PM1.0_CF_ATM_ug/m3", fillGraph = T,drawPoints = F, color = "red", label = "ultrafine") %>%
dySeries("PM2.5_CF_ATM_ug/m3", drawPoints = F, color = "gray", label = "fine") %>%
dySeries("PM10.0_CF_ATM_ug/m3", drawPoints = F, color = "blue", label = "coarse") %>%
dyRangeSelector(fillColor = "red",  dateWindow = c("2018-07-01", "2018-07-31"), height = 100)
dygraph(xts(foo, order.by = foo$dateTime), main = "Drought")  %>%
dySeries("PM1.0_CF_ATM_ug/m3", fillGraph = T,drawPoints = F, color = "red", label = "ultrafine") %>%
dySeries("PM2.5_CF_ATM_ug/m3", drawPoints = F, color = "gray", label = "fine") %>%
dySeries("PM10.0_CF_ATM_ug/m3", drawPoints = F, color = "blue", label = "coarse") %>%
dyRangeSelector(fillColor = "red",  dateWindow = c("2018-07-01", "2018-07-31"), height = 100)
dygraph(xts(foo, order.by = foo$dateTime), main = "Drought")  %>%
dySeries("PM1.0_CF_ATM_ug/m3", fillGraph = T,drawPoints = F, color = "red", label = "ultrafine") %>%
dySeries("PM2.5_CF_ATM_ug/m3", drawPoints = F, color = "gray", label = "fine") %>%
dySeries("PM10.0_CF_ATM_ug/m3", drawPoints = F, color = "blue", label = "coarse") %>%
dyRangeSelector(dateWindow = c("2018-07-01", "2018-07-31"), height = 100)
lastDay <- max(foo$dateTime)
lastDay
lastDay <- max(foo$dateTime) - 1
lastDay
dygraph(xts(foo, order.by = foo$dateTime), main = "Drought")  %>%
dySeries("PM1.0_CF_ATM_ug/m3", fillGraph = T, drawPoints = F, color = "red", label = "ultrafine") # %>%
dySeries("PM2.5_CF_ATM_ug/m3", drawPoints = F, color = "gray", label = "fine") %>%
dySeries("PM10.0_CF_ATM_ug/m3", drawPoints = F, color = "blue", label = "coarse") # %>%
dygraph(xts(foo, order.by = foo$dateTime), main = "Drought")  %>%
dySeries("PM1.0_CF_ATM_ug/m3", fillGraph = T, drawPoints = F, color = "red", label = "ultrafine") # %>%
dygraph(xts(foo, order.by = foo$dateTime), main = "Drought")  %>%
dySeries("PM1.0_CF_ATM_ug/m3", fillGraph = T, drawPoints = F, color = "red", label = "ultrafine") # %>%
dygraph(xts(foo, order.by = foo$dateTime), main = "PA Sensor")  %>%
dySeries("PM1.0_CF_ATM_ug/m3", fillGraph = T, drawPoints = F, color = "red", label = "ultrafine") # %>%
dygraph(xts(foo, order.by = foo$dateTime), main = "PA Sensor")  %>%
dySeries("PM1.0_CF_ATM_ug/m3", fillGraph = T, drawPoints = F, color = "red", label = "ultrafine")  %>%
dySeries("PM2.5_CF_ATM_ug/m3", drawPoints = F, color = "gray", label = "fine") %>%
dySeries("PM10.0_CF_ATM_ug/m3", drawPoints = F, color = "blue", label = "coarse")  %>%
dyRangeSelector(dateWindow = c("2018-07-01", "2018-07-31"), height = 100)
dygraph(xts(foo, order.by = foo$dateTime), main = "PA Sensor")  %>%
dySeries("PM1.0_CF_ATM_ug/m3", fillGraph = T, drawPoints = F, color = "red", label = "ultrafine")  %>%
dySeries("PM2.5_CF_ATM_ug/m3", drawPoints = F, color = "gray", label = "fine") %>%
dySeries("PM10.0_CF_ATM_ug/m3", drawPoints = F, color = "blue", label = "coarse")  %>%
dyRangeSelector(dateWindow = c("2018-07-01", "2018-07-05"), height = 100)
shiny::runApp('GitHub/SouthGatePA')
